class Solution {
    // Function to merge overlapping intervals
    mergeOverlap(arr) {
        if (arr.length <= 1) {
            return arr;
        }

        // Step 1: Sort intervals by their starting point
        arr.sort((a, b) => a[0] - b[0]);

        const result = [];
        let currentInterval = arr[0]; // Start with the first interval

        // Step 2: Traverse through the sorted array
        for (let i = 1; i < arr.length; i++) {
            const nextInterval = arr[i];

            // Step 3: Check if current interval overlaps with the next interval
            if (currentInterval[1] >= nextInterval[0]) {
                // Merge intervals by updating the end of the current interval
                currentInterval[1] = Math.max(currentInterval[1], nextInterval[1]);
            } else {
                // No overlap, push the current interval to the result and move to the next interval
                result.push(currentInterval);
                currentInterval = nextInterval;
            }
        }

        // Step 4: Push the last interval
        result.push(currentInterval);

        return result;
    }
}